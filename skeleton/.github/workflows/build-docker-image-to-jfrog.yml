name: Build Docker Image & Publish on jFrog

on:
  workflow_dispatch:

env:
  IMAGE_NAME : {% raw %} ${{ github.repository }}:${{github.run_number}} {% endraw %}
  
jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 18
      uses: actions/setup-java@v3
      with:
        java-version: '18'
        distribution: 'adopt'

    - name: Cache local Maven repository
      id: cache
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: {% raw %} ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }} {% endraw %}
        restore-keys: |
          {% raw %} ${{ runner.os }}-maven- {% endraw %}

    - name: Echo cache hit
      if: steps.cache.outputs.cache-hit != 'true'
      run: echo "Cache NOT Hit"

    - name: Build with Maven
      run: mvn --batch-mode --update-snapshots package        
    
    - name: docker Login to Jfrog
      run: {% raw %} echo ${{secrets.JFROG_API_KEY}} | docker login -u${{values.jfrog_username}} --password-stdin ${{ values.jfrog_domain }} {% endraw %}

    - name: Build the Docker image
      run: {% raw %} docker build . --file Dockerfile --tag ${{ values.jfrog_domain }}/${{values.jfrog_reponame}/$IMAGE_NAME {% endraw %}

    - name: docker Push Image to Jfrog
      run: {% raw %} docker push ${{values.jfrog_domain}}/${{values.jfrog_reponame}/$IMAGE_NAME {% endraw %}

    - name: docker logout
      run: docker logout
